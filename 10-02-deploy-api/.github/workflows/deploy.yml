name: Deployment workflow
#
#on:
#  push:
#    branches:
#      - main

env:
  AWS_REGION: your-aws-region
  ECR_REGISTRY: your-aws-ecr-registry
  PROJECT: kotlin-hexagonal_http_api-course
  API_IMAGE_VERSION: 0.0.1

jobs:
  build:
    name: Build and Push image to ECR
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-external-id: ${{ secrets.AWS_ROLE_EXTERNAL_ID }}
          role-duration-seconds: 1200
          role-session-name: MySessionName

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1.5.1

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: kotlin-hexagonal_http_api-course
          IMAGE_TAG: ${{ env.API_IMAGE_VERSION }}
        run: |
          ./gradlew clean assemble
          docker build -t ${{ env.REGISTRY }}/${{ env.PROJECT }}:${{ env.API_IMAGE_VERSION }} .
          docker push ${{ env.REGISTRY }}/${{ env.PROJECT }}:${{ env.API_IMAGE_VERSION }}

      - name: Set outputs
        run: |
          echo "API_IMAGE=${{ env.REGISTRY }}/${{ env.PROJECT }}:${{ env.API_IMAGE_VERSION }}" >> $GITHUB_ENV

  deploy:
    needs: build
    name: Deploy to EKS
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-external-id: ${{ secrets.AWS_ROLE_EXTERNAL_ID }}
          role-duration-seconds: 1200
          role-session-name: MySessionName

      - name: Set eks cluster
        run: aws eks update-kubeconfig --name your-cluster-name --region ${{ env.AWS_REGION }}
        env:
          ENVIRONMENT: your-environment

      - name: Set environment variables
        run: |
          kubectl set env deployment/${{ env.PROJECT }} DB_PASSWORD=${{secret.DB__PASSWORD}} -n ${{ env.PROJECT }}
          kubectl set env deployment/${{ env.PROJECT }} DB_URL=${{secret.DB__URL}} -n ${{ env.PROJECT }}
          kubectl set env deployment/${{ env.PROJECT }} DB_PORT=${{secret.DB__PORT}} -n ${{ env.PROJECT }}

      - name: Deploy API
        run: |
          kubectl set image deployment/${{ env.PROJECT }} ${{ env.PROJECT }}=${{ env.API_IMAGE }} -n ${{ env.PROJECT }}
          kubectl rollout status deployment/${{ env.PROJECT }} -n ${{ env.PROJECT }}
